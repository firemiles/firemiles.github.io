<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Firemiles 的技术生活</title>
        <link>https://blog.firemiles.top/</link>
        <description>Firemiles 的技术生活轨迹</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>miles.dev@outlook.comm (firemiles)</managingEditor>
            <webMaster>miles.dev@outlook.comm (firemiles)</webMaster><lastBuildDate>Sun, 19 Jul 2020 22:17:49 &#43;0800</lastBuildDate>
            <atom:link href="https://blog.firemiles.top/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>容器网络的怪问题</title>
    <link>https://blog.firemiles.top/2020/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E7%9A%84%E6%80%AA%E9%97%AE%E9%A2%98/</link>
    <pubDate>Sun, 19 Jul 2020 22:17:49 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.firemiles.top/2020/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E7%9A%84%E6%80%AA%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[案例太多，一次写完有点太难为我，我就想到哪写到哪，保持更新。 长连接报文重传失败 有个客户来找，说他们的应用Server端日志里经常有长连接中断]]></description>
</item><item>
    <title>golang的reflect使用</title>
    <link>https://blog.firemiles.top/2020/golang%E7%9A%84reflect%E4%BD%BF%E7%94%A8/</link>
    <pubDate>Sun, 29 Mar 2020 09:30:51 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://blog.firemiles.top/2020/golang%E7%9A%84reflect%E4%BD%BF%E7%94%A8/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://firemiles-blog.oss-cn-shanghai.aliyuncs.com/20200329093558.png" referrerpolicy="no-referrer">
            </div><h2 id="reflect-介绍">reflect 介绍</h2>
<p>计算机科学中，反射(reflect) 指计算机程序在运行时（runtime）可以访问、检测和修改它本身状态或行为的一种能力。用比喻来说，反射就是程序在运行时能够“观察”并且修改自己的行为。</p>
<p>反射和内省（type introspection）不同，内省机制仅指程序在运行时对自身信息（称为元数据）的检测；反射机制不仅包括要能运行在对程序自身信息进行，还要能进一步根据这些信息改变程序状态或结构。</p>
<p>早期语言汇编包含反射能力，动态修改指令或对它们进行分析等等反射功能时很平常的。编程发展到如C语言等高抽象层次语言时，这种实践消失了，带有反射特性的高级编程语言要更晚出现。</p>
<p>golang 作为一个诞生较晚的现代语言，自然也支持反射能力。通过标准库 <code>reflect</code> 包我们可以使用 golang 提供的这个能力。</p>]]></description>
</item><item>
    <title>DHCP协议</title>
    <link>https://blog.firemiles.top/2020/dhcp%E5%8D%8F%E8%AE%AE/</link>
    <pubDate>Mon, 24 Feb 2020 23:41:33 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://blog.firemiles.top/2020/dhcp%E5%8D%8F%E8%AE%AE/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://firemiles-blog.oss-cn-shanghai.aliyuncs.com/20200224234329.png" referrerpolicy="no-referrer">
            </div><h2 id="协议说明">协议说明</h2>
<p>DHCP 协议（动态主机设定协定）是一个用于局域网的网络协议，位于TCP/IP的应用层，使用UDP协议工作，主要有两个用途：</p>
<ul>
<li>用于内部网络和网络服务商自动分配IP给用户</li>
<li>用于内部网络管理员对所有电脑作中央管理</li>
</ul>
<p>DHCP 用一台或一组DHCP服务器来管理网络参数的分配，这种分配方式具有容错性。即使在一个仅拥有少量机器的网络中，DHCP仍然是有用的，因为一台机器可以不造成任何影响的被加入到网路中。</p>
<p>甚至对于很少改变地址的服务器，DHCP仍然被建议用来设置它们的地址。如果服务器需要被重新分配地址，尽可能不改变之前的配置。对于一些设备，如路由器和防火墙，则不应该使用DHCP。</p>
<p>DHCP 于 1993 年10月成为标准协议，前身是 BOOTP （Bootstrap Protocol， 引导程序协议），DHCP 被设计成向前兼容 BOOTP 协议。当前的DHCP定义可以在<a href="https://tools.ietf.org/html/rfc2131" target="_blank" rel="noopener noreffer">RFC 2131</a>找到，而基于IPv6的建议标准(DHCPv6)可以在<a href="https://tools.ietf.org/html/rfc3315" target="_blank" rel="noopener noreffer">RFC3315</a>中找到。</p>]]></description>
</item><item>
    <title>具体数学-约瑟夫问题</title>
    <link>https://blog.firemiles.top/2020/%E5%85%B7%E4%BD%93%E6%95%B0%E5%AD%A6-%E7%BA%A6%E7%91%9F%E5%A4%AB%E9%97%AE%E9%A2%98/</link>
    <pubDate>Sat, 04 Jan 2020 20:07:55 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://blog.firemiles.top/2020/%E5%85%B7%E4%BD%93%E6%95%B0%E5%AD%A6-%E7%BA%A6%E7%91%9F%E5%A4%AB%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://firemiles-blog.oss-cn-shanghai.aliyuncs.com/20200104201137.png" referrerpolicy="no-referrer">
            </div><h2 id="引子">引子</h2>
<p>最近在读计算机经典教科书《具体数学》，作为一个非科班的计算机从业者，仿佛打开了新的天地，原来我刷题遇到的算法问题很多都可以用数学方法解决，原来数学不光是高数、线代和微积分三座大山，离散数学在计算机上是绝配。为记录学习过程中的心得并分享，故展开具体数学系列博客，望与有缘人分享这份知识的喜悦。</p>
<p>和《具体数学》的章节安排一样，本博客作为系列第一篇，主要讨论递归算法，从难易程度分成三个部分：<strong>河内塔</strong>、<strong>平面上的直线</strong>、<strong>约瑟夫问题</strong>。它们有两个共同的特征：一是都曾被数学家反复研究过；二是它们的解都用了 <em>递归</em> 的思想。</p>]]></description>
</item><item>
    <title>openvswitch 使用速查</title>
    <link>https://blog.firemiles.top/2020/openvswitch%E4%BD%BF%E7%94%A8%E9%80%9F%E6%9F%A5/</link>
    <pubDate>Wed, 01 Jan 2020 15:47:09 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://blog.firemiles.top/2020/openvswitch%E4%BD%BF%E7%94%A8%E9%80%9F%E6%9F%A5/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://firemiles-blog.oss-cn-shanghai.aliyuncs.com/20200101155834.png" referrerpolicy="no-referrer">
            </div>OVS 架构 本文主要针对内核态 openvsiwth，用户态 openvswitch 的使用和调试不在本文的讨论范围内。 ovs 架构如上图所示，主要由内核 datapath 和用户空间的 vswit]]></description>
</item><item>
    <title>IPv6特性介绍</title>
    <link>https://blog.firemiles.top/2019/ipv6%E7%89%B9%E6%80%A7%E4%BB%8B%E7%BB%8D/</link>
    <pubDate>Wed, 27 Nov 2019 09:47:43 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://blog.firemiles.top/2019/ipv6%E7%89%B9%E6%80%A7%E4%BB%8B%E7%BB%8D/</guid>
    <description><![CDATA[IPv6 概述 IPv6（互联网协议版本6）是一种新的寻址协议，旨在包含未来互联网的所有可能需求。 为什么是新的IP版本 到目前为止，IPv4已经证明自己]]></description>
</item><item>
    <title>常见容器网络问题诊断</title>
    <link>https://blog.firemiles.top/2019/%E5%B8%B8%E8%A7%81%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98%E8%AF%8A%E6%96%AD/</link>
    <pubDate>Sun, 24 Nov 2019 14:36:23 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://blog.firemiles.top/2019/%E5%B8%B8%E8%A7%81%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98%E8%AF%8A%E6%96%AD/</guid>
    <description><![CDATA[Kubernetes 的容器网络插件家族越来越庞大，各种模式层出不穷，但是万变不离其宗，overlay 和 underlay。overlay 常使用 vxlan 或者 ipip，u]]></description>
</item><item>
    <title>Load Balance 访问 Kubernetes Pod 源 IP 保留方案探索</title>
    <link>https://blog.firemiles.top/2019/preserve-source-ip-in-k8s/</link>
    <pubDate>Wed, 04 Sep 2019 22:21:59 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://blog.firemiles.top/2019/preserve-source-ip-in-k8s/</guid>
    <description><![CDATA[<p>Kuberentes 已经成为云计算事实上的基础设施，各大云服务厂商都推出了自己的Kubernets 集群托管服务。处于信息安全考虑，一些企业不允许自己的核心资产暴露在公共服务器上，公有云并不适合他们。一些云服务厂商嗅到了其中的商机，国外大厂OpenShift，国内云厂商阿里云、华为云、青云等纷纷顺势推出了基于Kubernetes的私有集群以及混合云的解决方案。</p>
<p>企业在选型方案是，网络能力往往是考量各解决方案优劣的一个重要指标，但是本文并不打算分析各厂商的网络方案（工作量太大，计划后续补上），而是主要聚焦 Kubernetes 集群中的一个小的网络特性，即 Kubernetes Load Balance Service 如何保留客户端源IP。</p>]]></description>
</item><item>
    <title>iptables 快速入门</title>
    <link>https://blog.firemiles.top/2019/iptables%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link>
    <pubDate>Sat, 16 Mar 2019 21:09:26 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://blog.firemiles.top/2019/iptables%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
    <description><![CDATA[iptables 是 netfilter 项目的一部分，自1998年首发至今已经20年了，仍然是Linux中网络流量控制的重要软件。学习网络知识，iptables 是绕不过的一道]]></description>
</item><item>
    <title>Kubernetes API 开发（五）</title>
    <link>https://blog.firemiles.top/2018/kubernetes-api-%E5%BC%80%E5%8F%91%E4%BA%94/</link>
    <pubDate>Wed, 26 Dec 2018 21:15:12 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://blog.firemiles.top/2018/kubernetes-api-%E5%BC%80%E5%8F%91%E4%BA%94/</guid>
    <description><![CDATA[<h2 id="添加一个新-api-version">添加一个新 API Version</h2>
<p>如果你要为一个 Group 添加一个新的 API Version，你可以从 <code>pkg/apis/&lt;group&gt;/&lt;existing-version&gt;</code> copy 到 <code>staging/src/k8s.io/api/&lt;group&gt;/&lt;existing-version&gt;</code> 目录中。</p>
<p>由于项目在飞速迭代，以下的内容有可能已经过时：</p>
<ul>
<li>你可以通过修改<a href="https://github.com/kubernetes/kubernetes/blob/v1.8.0-alpha.2/pkg/master/master.go#L381" target="_blank" rel="noopener noreffer">pkg/master/master.go.</a>控制是否默认 API Version enable</li>
<li>你必须在<a href="https://github.com/kubernetes/kubernetes/blob/v1.11.0/pkg/apis/apps/install/install.go" target="_blank" rel="noopener noreffer">pkg/apis/group_name/install/install.go.</a>中添加新 version</li>
<li>你必须在<a href="https://github.com/kubernetes/kubernetes/blob/v1.8.0-alpha.2/hack/lib/init.sh#L53" target="_blank" rel="noopener noreffer">hack/lib/init.sh#KUBE_AVAILABLE_GROUP_VERSIONS.</a>中添加新version</li>
<li>你必须在<a href="https://github.com/kubernetes/kubernetes/blob/v1.8.2/hack/update-generated-protobuf-dockerized.sh#L44" target="_blank" rel="noopener noreffer">hack/update-generated-protobuf-dockerized.sh</a>中添加新version，帮助生成protobuf IDL和marshallers</li>
<li>你必须在<a href="https://github.com/kubernetes/kubernetes/blob/v1.8.0-alpha.2/cmd/kube-apiserver/app/aggregator.go#L172" target="_blank" rel="noopener noreffer">cmd/kube-apiserver/app#apiVersionPriorities</a></li>
<li>你必须为新version安装storage <a href="https://github.com/kubernetes/kubernetes/blob/v1.8.0-alpha.2/pkg/registry/authentication/rest/storage_authentication.go" target="_blank" rel="noopener noreffer">pkg/registry/group_name/rest</a></li>
</ul>]]></description>
</item></channel>
</rss>
